plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.nucleoid.xyz' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricapi_version}"
	modImplementation "eu.pb4:polymer-core:${project.polymer_version}"
	modImplementation "eu.pb4:polymer-blocks:${project.polymer_version}"
	modImplementation "eu.pb4:polymer-resource-pack:${project.polymer_version}"

	modImplementation include('eu.pb4:sgui:1.6.1+1.21.1')
}

/* fabricApi {
	configureDataGeneration()
} */

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}

	processResources.exclude('.cache/**')
}



sourceSets.main.resources.srcDirs += "src/main/generated"

loom {
		runs {
				datagen {
							server()
							name = "Data Generation"
							runDir = "build/datagen"
							vmArg("-Dfabric-api.datagen")
							vmArg("-Dfabric-api.datagen.modid=spawnerloader9000")
							vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
				}
		}
}

/*
task cleanGeneratedData(type: Delete) {
    delete fileTree("src/main/resources/data")
}

task copyGeneratedData(type: Copy) {
    from file("src/main/generated")
    into file("src/main/resources")
	exclude '.cache'
	duplicatesStrategy(DuplicatesStrategy.INHERIT)
}

processResources.dependsOn cleanGeneratedData
runDatagen.dependsOn cleanGeneratedData
runDatagen.finalizedBy copyGeneratedData
*/